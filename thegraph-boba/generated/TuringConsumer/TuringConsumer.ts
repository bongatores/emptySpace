// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Result extends ethereum.Event {
  get params(): Result__Params {
    return new Result__Params(this);
  }
}

export class Result__Params {
  _event: Result;

  constructor(event: Result) {
    this._event = event;
  }

  get uri(): string {
    return this._event.parameters[0].value.toString();
  }

  get number(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get result(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get x(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get z(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class TuringConsumer extends ethereum.SmartContract {
  static bind(address: Address): TuringConsumer {
    return new TuringConsumer("TuringConsumer", address);
  }

  helperAddr(): Address {
    let result = super.call("helperAddr", "helperAddr():(address)", []);

    return result[0].toAddress();
  }

  try_helperAddr(): ethereum.CallResult<Address> {
    let result = super.tryCall("helperAddr", "helperAddr():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  posOccupied(param0: i32, param1: i32): boolean {
    let result = super.call("posOccupied", "posOccupied(uint8,uint8):(bool)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0)),
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param1))
    ]);

    return result[0].toBoolean();
  }

  try_posOccupied(param0: i32, param1: i32): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "posOccupied",
      "posOccupied(uint8,uint8):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param1))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  uri(param0: i32, param1: i32): string {
    let result = super.call("uri", "uri(uint8,uint8):(string)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0)),
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param1))
    ]);

    return result[0].toString();
  }

  try_uri(param0: i32, param1: i32): ethereum.CallResult<string> {
    let result = super.tryCall("uri", "uri(uint8,uint8):(string)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0)),
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param1))
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _helper(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RequestRandomWordsCall extends ethereum.Call {
  get inputs(): RequestRandomWordsCall__Inputs {
    return new RequestRandomWordsCall__Inputs(this);
  }

  get outputs(): RequestRandomWordsCall__Outputs {
    return new RequestRandomWordsCall__Outputs(this);
  }
}

export class RequestRandomWordsCall__Inputs {
  _call: RequestRandomWordsCall;

  constructor(call: RequestRandomWordsCall) {
    this._call = call;
  }

  get _uri(): string {
    return this._call.inputValues[0].value.toString();
  }

  get coords(): Array<i32> {
    return this._call.inputValues[1].value.toI32Array();
  }
}

export class RequestRandomWordsCall__Outputs {
  _call: RequestRandomWordsCall;

  constructor(call: RequestRandomWordsCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
